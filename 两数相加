/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* list = new ListNode(-1);
        ListNode* node = list;
        int ret = 0;
        while(l1||l2)
        {
            int tmp = 0;
            if (l1 != nullptr) 
            {
                tmp += l1->val;
                l1 = l1->next;
            }
            if (l2 != nullptr)
            {
                tmp += l2->val;
                l2 = l2->next;
            }
                 
            tmp += ret;

            ret = tmp/10;
            tmp %= 10;

            node->next = new ListNode(tmp);
            node = node->next;     
        }
        if(ret){
            node->next = new ListNode(1);
        }
        
        return list->next;
    }
};

class Solution {
public:
    unordered_map<char, string> mp = {{'2', "abc"},{'3',"def"}, {'4',"ghi"}, {'5',"jkl"},{'6',"mno"}, {'7',"pqrs"},{'8',"tuv"},{'9',"wxyz"}};
    void DFS(string & digits, vector<string>& all, string cur, int idx){
        if(idx == digits.size()){
            all.push_back(cur);
            return;
        }
        string str = mp[digits[idx]];
        for(char ch:str){
            DFS(digits, all, cur+ch, idx+1);
        }
    }
    vector<string> letterCombinations(string digits) {

        vector<string> all;
        if(digits.empty()){
            return all;
        }
        DFS(digits, all, "", 0);
        return all;
    }
};

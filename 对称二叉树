/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool _isSymmetric(TreeNode*t1, TreeNode* t2){
        if(t1 == NULL&&t2 == NULL){
            return true;
        }
        if(t1 == NULL||t2 == NULL){
            return false;
        }
        return (t1->val == t2->val) && _isSymmetric(t1->left, t2->right) && _isSymmetric(t2->left, t1->right);
    }

    bool isSymmetric(TreeNode* root) {
        if(!root){
            return true;
        }
        return _isSymmetric(root->left, root->right);
    }
};

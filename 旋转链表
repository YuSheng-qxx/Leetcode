/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL || k == 0){
            return head;
        }
        ListNode* node = head;
        ListNode* last = NULL;
        int count = 0;
        while(node){
            count++;
            last = node;
            node = node->next;
        }   
        k %= count;
        last->next = head;
        node = head;   
        for(int i=0; i<count-k-1; i++){
            node = node->next;
            head = head->next;
        }
        head = node->next;
        node->next = NULL;
        return head;
        
    }
};

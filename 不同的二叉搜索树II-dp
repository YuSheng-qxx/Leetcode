/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> DFS(int i, int n){
        if(i > n){
            return {NULL};
        }
        vector<TreeNode*> mat;
        for(int j=i; j<=n; j++){
            vector<TreeNode*> lt = DFS(i, j-1);
            vector<TreeNode*> rt = DFS(j+1, n);
            for(auto l:lt){
                for(auto r:rt){
                    TreeNode* root = new TreeNode(j);
                    root->left = l;
                    root->right = r;
                    mat.push_back(root);
                }
            }
        }
        return mat;
    }
    vector<TreeNode*> generateTrees(int n) {
        
        if(n == 0){
            return {};
        }

        return DFS(1, n);
    }
};
